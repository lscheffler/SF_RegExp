<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="de" lang="de">
<head>
<title>Method Init of class SF_RegExp</title>
<meta content="text/html; charset=windows-1252" http-equiv="Content-Type" />
<meta name="Generator" content="Project Documenting Machine" />
<meta name="Version" content="1.3.3" />
<link rel="stylesheet" href="../../css/foxw.css" type="text/css" />
<link rel="stylesheet" href="../../css/sc.css" type="text/css" />
<link rel="stylesheet" href="../../repository/diamp_pdm_ab.css" type="text/css" />
<link rel="stylesheet" href="../../repository/pdm_ab.css" type="text/css" />
<link rel="stylesheet" href="../../repository/pdm_ab_notes.css" type="text/css" />
<script src="../../js/pdm.js" language="JavaScript" type="text/javascript"></script>
</head>
<body>
<div class="diaxp_mhead">Init Method</div>
<div class="diaxp_mbody_class">

<table class="clear_table">
 <tbody>
  <tr><td>Class: </td><td><a href="cls.sf_regexp.htm" title="Skip to class sf_regexp">SF_RegExp</a></td></tr>
  <tr><td>Description:</td><td>Occurs when an object is created.</td></tr>
 </tbody>
</table>
</div>
<div class="diaxp_mbody">
<!-- Created with _diamp_pdm_ab by Agnes Beste    05.05.2023 10:04 -->
 <div class="PDM_AB_Descr"><!-- Descr Begin -->
Init the DotNet library.
 </div><!-- Descr End -->

 <div class="DIAMP_PDM_AB_Syntax"><!-- Syntax Begin -->
  <div class="SColor">
   <div class="RetVal"><a href="#_6LY0LLDAF">RetVal</a>&nbsp;</div>   <div class="RetValEq">=</div>   <div class="PEM">
    Object.INIT
   </div>
   <div class="Para">
    ([<a href="#_6LY0LLDAG">tcPathTo_SF_RegExp</a>])
   </div>
   <div style="clear: both"></div>
  </div><!-- Colour End -->
 </div><!-- Syntax End -->

 <div class="DIAMP_PDM_AB_Params"><!-- Parameters Begin -->
  <span class="PDM_AB_Head">
   Parameter
  </span>
  <dl class="DIAMP_PDM_AB_Params_List">
   <dt class="dt_">
    <a class="DIAMP_PDM_AB_Params_ParaName" id="_6LY0LLDAG" name="_6LY0LLDAG">
     <span class="PDMEXPR PDMNor" ><span class='PDMVar'>tcPathTo_SF_RegExp</span></span>

    </a>
   </dt>
   <dd class="dd_">
    <span class="Params_Short">
     The path to wwDotnetBridge and the assembly SF_RegExp.dll
    </span>
    <table class="Params_Info">
     <colgroup>
      <col class="ColumnValue" />
      <col class="ColumnData" />
     </colgroup>
     <tbody>
      <tr>
       <td class="CellValue">Type</td>
       <td class="CellData">Character</td>
      </tr>
      <tr>
       <td class="CellValue">Direction</td>
       <td class="CellData">Input</td>
      </tr>
      <tr>
       <td class="CellValue">Optional</td>
      <td class="CellData">&nbsp;</td>
      </tr>
     </tbody>
    </table>
   </dd>
  </dl>
 </div><!-- Parameters End -->

 <div class="DIAMP_PDM_AB_RetVal"><!-- Returns Begin -->
  <div>
   <span class="PDM_AB_Head">
    <a id="_6LY0LLDAF" name="_6LY0LLDAF">
     Return value
    </a>
   </span>
  </div>
  <div class="PDM_AB_Body">
If the method fails to start wwDotnetBridge or to load the Assembly, it will return <span class="PDMEXPR PDMNor" ><span class='PDMLit'>.NULL.</span></span>
.
  </div>
 </div><!-- Returns End -->


<!-- /Created with _diamp_pdm_ab by Agnes Beste    05.05.2023 10:04 -->

 <div class="SC">
  <img onclick="ExpandSC('SP_1',-1);"class="imgEC" src="../../imgs/dotab.gif" alt="Expand/Collapse source code of procedure INIT" id="IMG_SP_1" />
  <span ondblclick="ExpandSC('SP_1',-1);" class="SCCaption"><a name="SF_RegExp">Source Code</a></span>
  <div ondblclick="ExpandSC('SP_1',-1);" class="SCE" style="display: none;" id="TX_SP_1">
<!-- Code Begin -->
<pre class="PDMCODE PDMNor" >  <span class='PDMRes'>LPARAMETERS</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>tcPathTo_SF_RegExp</span>
  <span class='PDMRes'>LOCAL</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>lcOldPath</span>   <span class='PDMRes'>AS</span> <span class='PDMRes'>STRING</span><span class='PDMOper'>,</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>lcPath</span>      <span class='PDMRes'>AS</span> <span class='PDMRes'>STRING</span><span class='PDMOper'>,</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>llError</span>     <span class='PDMRes'>AS</span> <span class='PDMVar'>BOOLEAN</span><span class='PDMOper'>,</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>loBridge</span>    <span class='PDMRes'>AS</span> <span class='PDMRes'>OBJECT</span><span class='PDMOper'>,</span><span class='PDMOper'>;</span>
   <span class='PDMVar'>loException</span> <span class='PDMRes'>AS</span> <span class='PDMRes'>EXCEPTION</span>

  <span class='PDMVar'>lcOldPath</span> <span class='PDMOper'>=</span> <span class='PDMRes'>FULLPATH</span><span class='PDMOper'>(</span><span class='PDMStr'>""</span><span class='PDMOper'>,</span><span class='PDMStr'>""</span><span class='PDMOper'>)</span>

  <span class='PDMVar'>lcPath</span> <span class='PDMOper'>=</span> <span class='PDMRes'>SYS</span><span class='PDMOper'>(</span><span class='PDMLit'>16</span><span class='PDMOper'>)</span>
  <span class='PDMVar'>lcPath</span> <span class='PDMOper'>=</span> <span class='PDMRes'>RIGHT</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcPath</span><span class='PDMOper'>,</span><span class='PDMRes'>LEN</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcPath</span><span class='PDMOper'>)</span><span class='PDMOper'>-</span><span class='PDMRes'>AT</span><span class='PDMOper'>(</span><span class='PDMStr'>" "</span><span class='PDMOper'>,</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcPath</span><span class='PDMOper'>,</span><span class='PDMLit'>2</span><span class='PDMOper'>)</span><span class='PDMOper'>)</span>
  <span class='PDMVar'>lcPath</span> <span class='PDMOper'>=</span> <span class='PDMRes'>JUSTPATH</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcPath</span><span class='PDMOper'>)</span>


  <span class='PDMRes'>IF</span> <span class='PDMRes'>VARTYPE</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>__SF_REGEXPATH</span><span class='PDMOper'>)</span><span class='PDMOper'>=</span><span class='PDMStr'>"C"</span> <span class='PDMRes'>THEN</span>
   <span class='PDMRes'>IF</span> <span class='PDMRes'>EMPTY</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span><span class='PDMOper'>)</span> <span class='PDMRes'>THEN</span>
    <span class='PDMVar'>tcPathTo_SF_RegExp</span> <span class='PDMOper'>=</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>__SF_REGEXPATH</span>
   <span class='PDMRes'>ELSE</span>  <span class='PDMCom'>&amp;&amp;Vartype(__SF_REGEXPATH)="C"</span>
    <span class='PDMVar'>__SF_REGEXPATH</span> <span class='PDMOper'>=</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span>
   <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;Vartype(__SF_REGEXPATH)="C"</span>

  <span class='PDMRes'>ELSE</span>  <span class='PDMCom'>&amp;&amp;Vartype(__SF_REGEXPATH)="C"</span>
   <span class='PDMRes'>IF</span> <span class='PDMRes'>EMPTY</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span><span class='PDMOper'>)</span> <span class='PDMRes'>THEN</span>
    <span class='PDMVar'>tcPathTo_SF_RegExp</span> <span class='PDMOper'>=</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcPath</span>
   <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;EMPTY(m.tcPathTo_SF_RegExp)</span>
   <span class='PDMRes'>PUBLIC</span> <span class='PDMVar'>__SF_REGEXPATH</span>
   <span class='PDMVar'>__SF_REGEXPATH</span> <span class='PDMOper'>=</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span>

  <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;Vartype(__SF_REGEXPATH)="C"</span>

  <span class='PDMRes'>CD</span> <span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span><span class='PDMOper'>)</span>

  <span class='PDMRes'>TRY</span>
    <span class='PDMRes'>DO</span> <span class='PDMVar'>wwDotnetBridge</span>

   <span class='PDMRes'>CATCH</span>
    <span class='PDMRes'>TRY</span>
      <span class='PDMRes'>SET</span> <span class='PDMRes'>PATH</span> <span class='PDMRes'>TO</span> <span class='PDMOper'>(</span><span class='PDMStr'>'"'</span><span class='PDMOper'>+</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span><span class='PDMOper'>+</span><span class='PDMStr'>'"'</span><span class='PDMOper'>)</span> <span class='PDMRes'>ADDITIVE</span>
      <span class='PDMRes'>DO</span> <span class='PDMVar'>wwDotnetBridge</span>

     <span class='PDMRes'>CATCH</span>
      <span class='PDMVar'>llError</span> <span class='PDMOper'>=</span> <span class='PDMLit'>.T.</span>
    <span class='PDMRes'>ENDTRY</span>
  <span class='PDMRes'>ENDTRY</span>

  <span class='PDMRes'>IF</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>llError</span> <span class='PDMRes'>THEN</span>
   <span class='PDMRes'>CD</span> <span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcOldPath</span><span class='PDMOper'>)</span>
   <span class='PDMRes'>RETURN</span> <span class='PDMLit'>.F.</span>
  <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;m.llError</span>

  <span class='PDMVar'>loBridge</span> <span class='PDMOper'>=</span> <span class='PDMVar'>GetwwDotnetBridge</span><span class='PDMOper'>(</span><span class='PDMOper'>)</span>

  <span class='PDMRes'>TRY</span>
<span class='PDMCom'>*Was zu testen ist</span>
    <span class='PDMVar'>loBridge</span><span class='PDMOper'>.</span><span class='PDMVar'>LoadAssembly</span><span class='PDMOper'>(</span><span class='PDMStr'>"SF_RegExp.dll"</span><span class='PDMOper'>)</span>

    <span class='PDMRes'>THIS</span><span class='PDMOper'>.</span><span class='PDMVar'>goRegExp</span> <span class='PDMOper'>=</span> <span class='PDMVar'>loBridge</span><span class='PDMOper'>.</span><span class='PDMVar'>CreateInstance</span><span class='PDMOper'>(</span><span class='PDMStr'>"SF_RegExp.SF_RegExp"</span><span class='PDMOper'>)</span>

   <span class='PDMRes'>CATCH</span>
    <span class='PDMRes'>TRY</span>
      <span class='PDMVar'>loBridge</span><span class='PDMOper'>.</span><span class='PDMVar'>LoadAssembly</span><span class='PDMOper'>(</span><span class='PDMRes'>ADDBS</span><span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>tcPathTo_SF_RegExp</span><span class='PDMOper'>)</span><span class='PDMOper'>+</span><span class='PDMStr'>"SF_RegExp.dll"</span><span class='PDMOper'>)</span>

      <span class='PDMRes'>THIS</span><span class='PDMOper'>.</span><span class='PDMVar'>goRegExp</span> <span class='PDMOper'>=</span> <span class='PDMVar'>loBridge</span><span class='PDMOper'>.</span><span class='PDMVar'>CreateInstance</span><span class='PDMOper'>(</span><span class='PDMStr'>"SF_RegExp.SF_RegExp"</span><span class='PDMOper'>)</span>

     <span class='PDMRes'>CATCH</span>
      <span class='PDMVar'>llError</span> <span class='PDMOper'>=</span> <span class='PDMLit'>.T.</span>
    <span class='PDMRes'>ENDTRY</span>
  <span class='PDMRes'>ENDTRY</span>

  <span class='PDMRes'>IF</span> <span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>llError</span> <span class='PDMRes'>THEN</span>
   <span class='PDMRes'>CD</span> <span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcOldPath</span><span class='PDMOper'>)</span>
   <span class='PDMRes'>RETURN</span> <span class='PDMLit'>.F.</span>
  <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;m.llError</span>

  <span class='PDMRes'>IF</span> <span class='PDMRes'>ISNULL</span><span class='PDMOper'>(</span><span class='PDMRes'>THIS</span><span class='PDMOper'>.</span><span class='PDMVar'>goRegExp</span><span class='PDMOper'>)</span> <span class='PDMRes'>THEN</span>
   <span class='PDMRes'>CD</span> <span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcOldPath</span><span class='PDMOper'>)</span>
   <span class='PDMRes'>RETURN</span> <span class='PDMLit'>.F.</span>
  <span class='PDMRes'>ENDIF</span> <span class='PDMCom'>&amp;&amp;ISNULL(THIS.goRegExp)</span>

  <span class='PDMRes'>CD</span> <span class='PDMOper'>(</span><span class='PDMVar'>m</span><span class='PDMOper'>.</span><span class='PDMVar'>lcOldPath</span><span class='PDMOper'>)</span></pre>
 <!-- Code End -->
  </div>
 </div>
</div>
<div class="diaxp_mfoot"> <div class="PDM_AB_CopyRight"><!-- Footer Begin -->
  <hr />
  <div class="PDM_AB_Body">
<i>&copy; 05.05.2023 Lutz Scheffler Software Ingenieurb&uuml;ro</i>
  </div><!-- Body End -->
 </div><!-- Footer End -->
</div>
<script language="JavaScript" type="text/javascript">
lo=document.getElementById("TX_SP_1");
lo.XType="SourceCode";
lo.Dir="../../imgs/";


</script>
</body>
</html>
